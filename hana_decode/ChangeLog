
  ChangeLog for Bob Michaels' Hall A C++ Decoder
  ==============================================

 ** Mods Feb 2015

     The new decoder is called CodaDecoder.  It should replace
     THaCodaDecoder which might eventually be deleted.  Switching
     between decoders is accomplished in /src/THaInterface.

     The new decoder has a more Object-Oriented feel to it.
     Modules are used (base class Modules) and there is a class
     hierarchy of VmeModules and FastbusModules.  To add a new
     module look at SkeletonModule and imitate this (for more
     complete instructions, ask Bob).  Some modules like F1TDC
     are still a work in progress, but the Fastbus and Scalers
     are working well.


 **  Mods Jan 2003

     Fix some index bugs in THaEvData.
     Make STANDALONE mode more transparent.


 **  Modification to CVS, Jan 2002

      Added support for RCS and synchronous readout of scalers.

      THaCrateMap::init(), default initializatoin has improved
      time dependence.  Uses Unix time from CODA file to set the
      internal flags.


 **  Mar, 2001  Version 1.4

       1. New THaEtClient and THaCodaData classes to improve
	  the abstract interface to CODA.  THaCodaFile needed
	  virtually no change.  Makefile modified; use flag
	  ONLINE_ET=1 if compiling on site with access to ET library,
	  else leave ONLINE_ET undefined.   See README_ET for details
	  about how to implement this.

       2. Time dependence built into THaCrateMap::Init() in a
	  crude way.  See comments there.  You'll need to set some
	  flags, depending on what era of data you analyze.  The
	  default is for post-Jan-2001.  We need a database !!

       3. Decoding of ROC16 used by RICH detector.

 **  Aug, 2000  Version 1.3

       1. Using 'gprof' (profiling) to determine slow parts of
	  code, we improved efficiency.  Benchmark:  Read data,
          decode, and fetch VDC & scint.  'gprof' appears to ignore
          I/O.  Results: gprof time decreased from 36.2 to 16.5 sec
          (real time 46 -> 29 sec) for 50K events on Pent II 400 MHz.
	      - Used memset instead of clearing arrays (Ole's idea)
	      - Ole's new swapped_intcpy (swapping assembly code)
	      - Used bit operations instead of arithmetic. (Ole's idea)
	      - Inlining and remove unecessary steps
	      - Delete THaIntArray class (instead, 1 Mbyte arrays)

       2. More robust EPICS decoding.

       3. Load flags in THaEvData (buffered mode, synch checks).  If
	  data goes out of synch, you are warned, but no recovery yet.

       4. New THaHelicity class to treat beam helicity, added as a
	  member of THaEvData.

       5. More efficient THaEtClient.

       6. Ole's improvements to Makefile.


 **  June, 2000  Version 1.2

	1. All references to <vector> and <string> deleted
	   from headers.  Where possible, use TString.
	   Replace vector<int> by THaIntArray.  Some usages
	   of <string> remains in implementation files.

	2. Treat all event types, e.g. "go", "prestart".

	3. THaIntArray wakes up with MAXCHUNK=20, a limit
	   sufficient for decoder, but can change size
	   with method reSize() as needed by THaEtClient.

        4. Dictionary added, to allow classes to load into root.
           This also permits HTML document generation.

	5. THaEvData: Add methods to parse and obtain EPICS
           data belonging to new member class THaEpicsStack

	6. Conforming to style, all classes renamed to begin
	   with THa, and sources end in .C instead of .cpp.
	   This implies that Ole's THaEvData was replaced.

        7. Makefile


 **  April 2000, Version 1.1

	1. etClient.cpp and etClient.h
	       totally rewritten

	2. et.h
	       new file (from DAQ group)

	3. codaData -  a couple small changes.

	4. etclient_main.cpp - the example code to use ET.

        5. Makefile
