--- evio-4.4.6/SConstruct	2017-09-18 16:38:42.000000000 -0400
+++ evio-4.4.6/SConstruct.scons3	2017-09-28 19:07:12.000000000 -0400
@@ -50,9 +50,9 @@
 # a configure-type test.
 is64bits = coda.is64BitMachine(env, platform, machine)
 if is64bits:
-    print "We're on a 64-bit machine"
+    print ("We're on a 64-bit machine")
 else:
-    print "We're on a 32-bit machine"
+    print ("We're on a 32-bit machine")
 
 
 #############################################
@@ -65,25 +65,25 @@
 # debug option
 AddOption('--dbg', dest='ddebug', default=False, action='store_true')
 debug = GetOption('ddebug')
-if debug: print "Enable debugging"
+if debug: print ("Enable debugging")
 Help('--dbg               compile with debug flag\n')
 
 # vxworks 5.5 option
 AddOption('--vx5.5', dest='doVX55', default=False, action='store_true')
 useVxworks55 = GetOption('doVX55')
-if useVxworks55: print "Use vxWorks version 5.5"
+if useVxworks55: print ("Use vxWorks version 5.5")
 Help('--vx5.5             cross compile for vxworks 5.5\n')
 
 # vxworks 6.0 option
 AddOption('--vx6.0', dest='doVX60', default=False, action='store_true')
 useVxworks60 = GetOption('doVX60')
-if useVxworks60: print "Use vxWorks version 6.0"
+if useVxworks60: print ("Use vxWorks version 6.0")
 Help('--vx6.0             cross compile for vxworks 6.0\n')
 
 # 32 bit option
 AddOption('--32bits', dest='use32bits', default=False, action='store_true')
 use32bits = GetOption('use32bits')
-if use32bits: print "use 32-bit libs & executables even on 64 bit system"
+if use32bits: print ("use 32-bit libs & executables even on 64 bit system")
 Help('--32bits            compile 32bit libs & executables on 64bit system\n')
 
 # install directory option
@@ -153,7 +153,7 @@
     osname = 'vxworks'+ str(vxVersion) + '-ppc'
 
     if not coda.configureVxworks(env, vxVersion, platform):
-        print '\nCannot set enviroment for vxWorks ' + str(vxVersion) + ', exiting\n'
+        print ('\nCannot set enviroment for vxWorks ' + str(vxVersion) + ', exiting\n')
         Exit(0)
 
 else:
@@ -175,7 +175,7 @@
 if is64bits and use32bits and not useVxworks:
     osname = osname + '-32'
 
-print "OSNAME =", osname
+print ("OSNAME =", osname)
 
 # hidden sub directory into which variant builds go
 archDir = '.' + osname + debugSuffix
@@ -212,13 +212,13 @@
     # Create the include directories (make symbolic link if possible)
     coda.makeIncludeDirs(incInstallDir, archIncInstallDir, osDir, archIncLocalLink)
 
-    print 'Main install dir  = ', mainInstallDir
-    print 'bin  install dir  = ', binInstallDir
-    print 'lib  install dir  = ', libInstallDir
-    print 'inc  install dirs = ', incInstallDir, ", ", archIncInstallDir
+    print ('Main install dir  = ', mainInstallDir)
+    print ('bin  install dir  = ', binInstallDir)
+    print ('lib  install dir  = ', libInstallDir)
+    print ('inc  install dirs = ', incInstallDir, ", ", archIncInstallDir)
 
 else:
-    print 'No installation being done'
+    print ('No installation being done')
 
 print
 
@@ -253,7 +253,7 @@
 
 if 'tar' in COMMAND_LINE_TARGETS:
     if platform == 'SunOS':
-        print '\nMake tar file from Linux or MacOS please\n'
+        print ('\nMake tar file from Linux or MacOS please\n')
         Exit(0)
     coda.generateTarFile(env, 'evio', versionMajor, versionMinor)
 
